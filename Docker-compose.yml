services:
  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "8080:80"
    depends_on:
      - app
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: adoptMeApp
    ports:
      - "3000:3000"
    volumes:
      - "./api:/app"
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - sqlserver
      - redis
    env_file:
      - .env
  pruebas:
    build:
      context: .
      dockerfile: pruebas/Dockerfile.test
    container_name: adoptMePruebas
    depends_on:
      - sqlserver
    env_file:
      - .env
  redis:
    image: redis:7
    container_name: redis
    ports: 
      - "6379:6379"
  sqlserver:
    build: 
      context: ./sqlserver
      dockerfile: Dockerfile.sqlserver
    container_name: sqlserver
    ports:
      - "14330:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
    env_file:
      - .env
    volumes:
      - ./sqlserver/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
      - ./sqlserver/esquema-base.sql:/tmp/esquema-base.sql
      - "sql-data:/var/opt/mssql"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U sa -P $$SA_PASSWORD -Q 'SELECT 1'" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

volumes:
  sql-data: